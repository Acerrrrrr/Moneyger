/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package moneyger;


import java.sql.*;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class GoalsAndReminders extends javax.swing.JPanel {
    private Moneyger mainFrame;
    private double amount = 0.0;
    private double currentValue = 0.0;
    private String currentOperator = "";
    private List<String> storedData = new ArrayList<>();
    /**
     * Creates new form LogInn
     */
    public GoalsAndReminders(Moneyger mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateBudgetButton = new javax.swing.JButton();
        BalanceTrendTitle = new javax.swing.JLabel();
        Logout = new javax.swing.JLabel();
        noButton = new javax.swing.JButton();
        yesButton = new javax.swing.JButton();
        ScrollList = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Profile = new javax.swing.JLabel();
        CreateBudget = new javax.swing.JLabel();
        AmountField = new javax.swing.JTextField();
        LabelField = new javax.swing.JTextField();
        AccountDropdown = new javax.swing.JComboBox<>();
        CategoriesDropdown = new javax.swing.JComboBox<>();
        PeriodDropdown = new javax.swing.JComboBox<>();
        DashboardButton = new javax.swing.JButton();
        ExpenseTrackingButton = new javax.swing.JButton();
        IncomeTrackingButton = new javax.swing.JButton();
        GoalsAndReminders = new javax.swing.JButton();
        WhatsNewButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        CreateBudgetLabels = new javax.swing.JLabel();
        SideMenu = new javax.swing.JLabel();
        WhiteBG = new javax.swing.JLabel();
        BaseBG = new javax.swing.JLabel();

        setLayout(null);

        CreateBudgetButton.setBorderPainted(false);
        CreateBudgetButton.setContentAreaFilled(false);
        CreateBudgetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBudgetButtonActionPerformed(evt);
            }
        });
        add(CreateBudgetButton);
        CreateBudgetButton.setBounds(790, 530, 160, 50);

        BalanceTrendTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Records.png"))); // NOI18N
        add(BalanceTrendTitle);
        BalanceTrendTitle.setBounds(800, 130, 130, 30);

        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/HomeDashboard/Logoutt.png"))); // NOI18N
        add(Logout);
        Logout.setBounds(390, 240, 440, 173);
        Logout.setVisible(false);

        noButton.setBorderPainted(false);
        noButton.setContentAreaFilled(false);
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        add(noButton);
        noButton.setBounds(660, 340, 70, 40);
        noButton.setVisible(false);

        yesButton.setBorderPainted(false);
        yesButton.setContentAreaFilled(false);
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        add(yesButton);
        yesButton.setBounds(500, 340, 70, 40);
        yesButton.setVisible(false);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {""};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jList1PropertyChange(evt);
            }
        });
        ScrollList.setViewportView(jList1);

        add(ScrollList);
        ScrollList.setBounds(760, 180, 210, 310);

        Profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Group 39.png"))); // NOI18N
        add(Profile);
        Profile.setBounds(110, 100, 140, 136);

        CreateBudget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/GoalsAndReminders/ButtonGR.png"))); // NOI18N
        add(CreateBudget);
        CreateBudget.setBounds(780, 530, 170, 50);

        AmountField.setBackground(new java.awt.Color(0, 101, 71));
        AmountField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        AmountField.setForeground(new java.awt.Color(245, 245, 245));
        AmountField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        AmountField.setText("Enter amount here                     ");
        AmountField.setBorder(null);
        AmountField.setOpaque(true);
        AmountField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AmountFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AmountFieldFocusLost(evt);
            }
        });
        AmountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountFieldActionPerformed(evt);
            }
        });
        add(AmountField);
        AmountField.setBounds(335, 355, 370, 40);

        LabelField.setBackground(new java.awt.Color(0, 101, 71));
        LabelField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        LabelField.setForeground(new java.awt.Color(245, 245, 245));
        LabelField.setText("                      Enter label here");
        LabelField.setBorder(null);
        LabelField.setOpaque(true);
        LabelField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LabelFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                LabelFieldFocusLost(evt);
            }
        });
        LabelField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabelFieldActionPerformed(evt);
            }
        });
        add(LabelField);
        LabelField.setBounds(335, 175, 370, 40);

        AccountDropdown.setBackground(new java.awt.Color(0, 101, 71));
        AccountDropdown.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        AccountDropdown.setForeground(new java.awt.Color(245, 245, 245));
        AccountDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash" }));
        AccountDropdown.setToolTipText("");
        AccountDropdown.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AccountDropdown.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AccountDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountDropdownActionPerformed(evt);
            }
        });
        add(AccountDropdown);
        AccountDropdown.setBounds(335, 535, 370, 40);

        CategoriesDropdown.setBackground(new java.awt.Color(0, 101, 71));
        CategoriesDropdown.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        CategoriesDropdown.setForeground(new java.awt.Color(245, 245, 245));
        CategoriesDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Emergency fund", "Health care", "Leisure", "Education", "Others" }));
        CategoriesDropdown.setToolTipText("");
        CategoriesDropdown.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CategoriesDropdown.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CategoriesDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoriesDropdownActionPerformed(evt);
            }
        });
        add(CategoriesDropdown);
        CategoriesDropdown.setBounds(335, 445, 370, 40);

        PeriodDropdown.setBackground(new java.awt.Color(0, 101, 71));
        PeriodDropdown.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        PeriodDropdown.setForeground(new java.awt.Color(245, 245, 245));
        PeriodDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Yearly" }));
        PeriodDropdown.setToolTipText("");
        PeriodDropdown.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PeriodDropdown.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PeriodDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodDropdownActionPerformed(evt);
            }
        });
        add(PeriodDropdown);
        PeriodDropdown.setBounds(335, 265, 370, 40);

        DashboardButton.setBorderPainted(false);
        DashboardButton.setContentAreaFilled(false);
        DashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DashboardButtonActionPerformed(evt);
            }
        });
        add(DashboardButton);
        DashboardButton.setBounds(130, 300, 110, 30);

        ExpenseTrackingButton.setBorderPainted(false);
        ExpenseTrackingButton.setContentAreaFilled(false);
        ExpenseTrackingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpenseTrackingButtonActionPerformed(evt);
            }
        });
        add(ExpenseTrackingButton);
        ExpenseTrackingButton.setBounds(110, 350, 150, 30);

        IncomeTrackingButton.setBorderPainted(false);
        IncomeTrackingButton.setContentAreaFilled(false);
        IncomeTrackingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncomeTrackingButtonActionPerformed(evt);
            }
        });
        add(IncomeTrackingButton);
        IncomeTrackingButton.setBounds(110, 390, 150, 30);

        GoalsAndReminders.setBorderPainted(false);
        GoalsAndReminders.setContentAreaFilled(false);
        GoalsAndReminders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoalsAndRemindersActionPerformed(evt);
            }
        });
        add(GoalsAndReminders);
        GoalsAndReminders.setBounds(90, 440, 190, 40);

        WhatsNewButton.setBorderPainted(false);
        WhatsNewButton.setContentAreaFilled(false);
        WhatsNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WhatsNewButtonActionPerformed(evt);
            }
        });
        add(WhatsNewButton);
        WhatsNewButton.setBounds(120, 490, 130, 40);

        LogoutButton.setBorderPainted(false);
        LogoutButton.setContentAreaFilled(false);
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });
        add(LogoutButton);
        LogoutButton.setBounds(130, 550, 100, 30);

        CreateBudgetLabels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/GoalsAndReminders/Group 21GR.png"))); // NOI18N
        add(CreateBudgetLabels);
        CreateBudgetLabels.setBounds(340, 90, 350, 440);

        SideMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Group 34.png"))); // NOI18N
        add(SideMenu);
        SideMenu.setBounds(80, 70, 210, 541);

        WhiteBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/GoalsAndReminders/whitebg.png"))); // NOI18N
        add(WhiteBG);
        WhiteBG.setBounds(45, 40, 983, 614);

        BaseBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/GoalsAndReminders/Rectangle.png"))); // NOI18N
        add(BaseBG);
        BaseBG.setBounds(0, 0, 1080, 700);
    }// </editor-fold>//GEN-END:initComponents

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        Logout.setVisible(false);
        yesButton.setVisible(false);
        noButton.setVisible(false);
    }//GEN-LAST:event_noButtonActionPerformed

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        mainFrame.navigateTo(new OpenWindow(mainFrame));
    }//GEN-LAST:event_yesButtonActionPerformed

    private void AmountFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AmountFieldFocusGained
        // TODO add your handling code here:
        if (AmountField.getText().equals("Enter amount here                     "))
        {
            AmountField.setText("");
        }
    }//GEN-LAST:event_AmountFieldFocusGained

    private void AmountFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AmountFieldFocusLost
        // TODO add your handling code here:
        if (AmountField.getText().equals(""))
        {
            AmountField.setText("Enter amount here                     ");
        }
    }//GEN-LAST:event_AmountFieldFocusLost

    private void AmountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountFieldActionPerformed
        // TODO add your handling code here:
              // Handle the Equals button
    if (!AmountField.getText().isEmpty()) {
        double secondValue = Double.parseDouble(AmountField.getText());
        double result = 0.0;

        // If there's a current operator, perform the computation
        if (currentOperator != null) {
            switch (currentOperator) {
                case "+":
                    result = currentValue + secondValue;
                    break;
                case "-":
                    result = currentValue - secondValue;
                    break;
                case "*":
                    result = currentValue * secondValue;
                    break;
                case "/":
                    if (secondValue != 0) {
                        result = currentValue / secondValue;
                    } else {
                        JOptionPane.showMessageDialog(null, "Cannot divide by zero.");
                        return;
                    }
                    break;
            }
        } else {
            // If there's no current operator, set the result to the second value
            result = secondValue;
        }

        // Update the AmountField and currentValue
        AmountField.setText(String.valueOf(result));
        currentValue = result;
    }
    }//GEN-LAST:event_AmountFieldActionPerformed

    private void LabelFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LabelFieldFocusGained
        // TODO add your handling code here:
        if(LabelField.getText().equals("                      Enter label here"))
        {
            LabelField.setText("");
        }
    }//GEN-LAST:event_LabelFieldFocusGained

    private void LabelFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LabelFieldFocusLost
        // TODO add your handling code here:
        if(LabelField.getText().equals(""))
        {
            LabelField.setText("                      Enter label here");
        }
    }//GEN-LAST:event_LabelFieldFocusLost

    private void LabelFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabelFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LabelFieldActionPerformed

    private void AccountDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountDropdownActionPerformed

    private void CategoriesDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoriesDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoriesDropdownActionPerformed

    private void PeriodDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodDropdownActionPerformed

    private void DashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DashboardButtonActionPerformed
        mainFrame.navigateTo(new HomeDashboard(mainFrame));
    }//GEN-LAST:event_DashboardButtonActionPerformed

    private void ExpenseTrackingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpenseTrackingButtonActionPerformed
        mainFrame.navigateTo(new ExpenseTracking(mainFrame));
    }//GEN-LAST:event_ExpenseTrackingButtonActionPerformed

    private void IncomeTrackingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncomeTrackingButtonActionPerformed
        mainFrame.navigateTo(new IncomeTracking(mainFrame));
    }//GEN-LAST:event_IncomeTrackingButtonActionPerformed

    private void GoalsAndRemindersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoalsAndRemindersActionPerformed
        mainFrame.navigateTo(new GoalsAndReminders(mainFrame));
    }//GEN-LAST:event_GoalsAndRemindersActionPerformed

    private void WhatsNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WhatsNewButtonActionPerformed
        mainFrame.navigateTo(new WhatsNew(mainFrame));
    }//GEN-LAST:event_WhatsNewButtonActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        Logout.setVisible(!Logout.isVisible());
        yesButton.setVisible(!yesButton.isVisible());
        noButton.setVisible(!noButton.isVisible());
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void CreateBudgetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBudgetButtonActionPerformed
        // TODO add your handling code here:                                                                                                    
    int MAX_NOTE_LENGTH = 255;
    // 1. Retrieve user input from GUI components
    String account = AccountDropdown.getSelectedItem().toString();
    String category = CategoriesDropdown.getSelectedItem().toString();
    String label = LabelField.getText();
    String period = PeriodDropdown.getSelectedItem().toString();
    // ... (retrieve other values as needed)

    // Check if the label exceeds the maximum length allowed
    if (label.length() > MAX_NOTE_LENGTH) {
        JOptionPane.showMessageDialog(null, "Label is too long. Maximum length allowed is " + MAX_NOTE_LENGTH + " characters.");
        return; // Stop further execution
    }

    // Check if AmountField is not empty
    if (!AmountField.getText().isEmpty()) {
        currentValue = Double.parseDouble(AmountField.getText());
    }

    // 2. Get database connection
    try (Connection conn = ExpenseTracking.DatabaseConnection.getConnection()) {
        // 3. Prepare SQL statement to insert new record
        String insertSql = "INSERT INTO goals (account_column, category_column, label_column, amount_column, period_column) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement insertStmt = conn.prepareStatement(insertSql);
        insertStmt.setString(1, account);
        insertStmt.setString(2, category);
        insertStmt.setString(3, label);
        insertStmt.setDouble(4, currentValue);
        insertStmt.setString(5, period);
        // ... (set other values based on their types)

        // 4. Execute SQL statement to insert new record
        int rowsAffected = insertStmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Record created successfully!");
            
            // 5. After successfully inserting the record, execute SQL statement to fetch all records
            String selectSql = "SELECT account_column, category_column, label_column, amount_column, period_column, created_at FROM goals";
            PreparedStatement selectStmt = conn.prepareStatement(selectSql);
            ResultSet rs = selectStmt.executeQuery();

            // Create a list model to hold the data
            DefaultListModel<String> listModel = new DefaultListModel<>();

            // Collect data from the result set
            while (rs.next()) {
                String fetchedAccount = rs.getString("account_column");
                String fetchedCategory = rs.getString("category_column");
                String fetchedLabel = rs.getString("label_column");
                double fetchedValue = rs.getDouble("amount_column");
                String fetchedPeriod = rs.getString("period_column");
                String fetchedCreatedAt = rs.getString("created_at");

                // Format the fetched data
                String listItem = "<html><b>Account:</b> " + fetchedAccount + "<br>"
                                + "<b>Category:</b> " + fetchedCategory + "<br>"
                                + "<b>Label:</b> " + fetchedLabel + "<br>"
                                + "<b>Amount:</b> ₱" + String.format("%.2f", fetchedValue) + "<br>"
                                + "<b>Period:</b> " + fetchedPeriod + "<br>"
                                + "<b>Created At:</b> " + fetchedCreatedAt + "<hr></html>";

                // Add the formatted data to the list model
                listModel.addElement(listItem);
            }

            // Set the model of jList1 with the populated list model
            jList1.setModel(listModel);
        } else {
            JOptionPane.showMessageDialog(null, "Failed to create record!");
        }
    } catch (SQLException e) {
        System.out.println("Error creating record: " + e.getMessage());
    }

    }//GEN-LAST:event_CreateBudgetButtonActionPerformed

    private void jList1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jList1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1PropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AccountDropdown;
    private javax.swing.JTextField AmountField;
    private javax.swing.JLabel BalanceTrendTitle;
    private javax.swing.JLabel BaseBG;
    private javax.swing.JComboBox<String> CategoriesDropdown;
    private javax.swing.JLabel CreateBudget;
    private javax.swing.JButton CreateBudgetButton;
    private javax.swing.JLabel CreateBudgetLabels;
    private javax.swing.JButton DashboardButton;
    private javax.swing.JButton ExpenseTrackingButton;
    private javax.swing.JButton GoalsAndReminders;
    private javax.swing.JButton IncomeTrackingButton;
    private javax.swing.JTextField LabelField;
    public javax.swing.JLabel Logout;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JComboBox<String> PeriodDropdown;
    private javax.swing.JLabel Profile;
    private javax.swing.JScrollPane ScrollList;
    private javax.swing.JLabel SideMenu;
    private javax.swing.JButton WhatsNewButton;
    private javax.swing.JLabel WhiteBG;
    private javax.swing.JList<String> jList1;
    private javax.swing.JButton noButton;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
